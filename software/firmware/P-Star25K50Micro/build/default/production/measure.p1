Version 3.2 HI-TECH Software Intermediate Code
[; ;measure.h: 11: void measure_update();
[; ;measure.h: 12: char measure_data();
"3 measure.c
[v _cpm `uc ~T0 @X0 1 s ]
[i _cpm
-> -> 0 `i `uc
]
[; ;measure.c: 3: static char cpm = 0;
"5
[v _init_measure `(v ~T0 @X0 1 ef ]
"6
{
[; ;measure.c: 5: void init_measure()
[; ;measure.c: 6: {
[e :U _init_measure ]
[f ]
[; ;measure.c: 8: }
"8
[e :UE 1 ]
}
"9
[v _measure_update `(v ~T0 @X0 1 ef ]
"10
{
[; ;measure.c: 9: void measure_update()
[; ;measure.c: 10: {
[e :U _measure_update ]
[f ]
[; ;measure.c: 11: cpm++;
"11
[e ++ _cpm -> -> 1 `i `uc ]
[; ;measure.c: 12: }
"12
[e :UE 2 ]
}
"13
[v _measure_data `(uc ~T0 @X0 1 ef ]
"14
{
[; ;measure.c: 13: char measure_data()
[; ;measure.c: 14: {
[e :U _measure_data ]
[f ]
[; ;measure.c: 15: return cpm;
"15
[e ) _cpm ]
[e $UE 3  ]
[; ;measure.c: 16: }
"16
[e :UE 3 ]
}
